6 Steps to Calling a Function
******************************
    1) Parameters to access
    2) Transfer control to Function
    3) Acquire local storage
    4) Peform task
    5) Put result / return value
    6) Transfer control back

Argument registers:     $a0-$a3
Value registers:        $v0-$v1
return address:         $ra

Saved registers
**********
$ra
$sp 
$gp
$fp
$s0-$s7

Not preserved registers
********************
$v0, $v1
$a0-$a3
$t0-$t9

Use stack on:
    - automatic variables
    - saved variables

Allocating Space on Stack:
******************************
Procedure Frame = Activation record
Frame pointer ($fp) - not always needed
    - variable sized arrays use frame pointers

Example
******************************
int sumSquare(int x, int y){
    return mult(x,x) + y;
}

sumSquare:
    addi    $sp, $sp, -8
    sw      $ra, 4($sp)
    sw      $a1, 0($sp)
    add     $a1, $a0, $zero
    jal     mult 
    lw      $a1, 0($sp)
    add     $v0, $v0, $a1
    lw      $ra, 4($sp)
    addi    $sp, $sp, 8
    jr      $ra
    mult:   ...
