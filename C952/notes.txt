Parallel Threads
******************************
Somehow divide the work of one job

Parallelism Only Path to Higher Performance
******************************


Thread:
    a sequential flow of instructions that performs some task
    associated:
        program counter
        runs tasks

Software will multiplex the hardware thread 

OS - move software thread to hardware thread, then switch off

Hardware thread - does work 
Software thread - moves code around (multiplexing)

OS Threads
******************************
timer 


Hardware Multithreading
******************************
Processor = expensive, should no be left idle
Long memory latency to memory on cache miss

Second set of registers and second PC 
    switch over while other processor is in stall 

The amount of resources is actually small to add hardware Multithreading


core:
    has own PC counters 
    own fetch instruction